{
    "name": "designbycode/levenshtein-distance",
    "description": "The LevenshteinDistance class provides a method to calculate the Levenshtein distance between two strings. The Levenshtein distance is a measure of the minimum number of single-character edits (insertions, deletions, or substitutions) required to change one word into the other.",
    "keywords": [
        "designbycode",
        "levenshtein-distance",
        "levenshtein distance",
        "levenshtein"
    ],
    "homepage": "https://github.com/designbycode/levenshtein-distance",
    "license": "MIT",
    "authors": [
        {
            "name": "Claude Myburgh",
            "email": "claude@designbycode.co.za",
            "role": "Developer"
        }
    ],
    "require": {
        "php": "^8.1|^8.2|^8.3"
    },
    "require-dev": {
        "pestphp/pest": "^3.0",
        "laravel/pint": "^1.0",
        "spatie/ray": "^1.28"
    },
    "autoload": {
        "psr-4": {
            "Designbycode\\LevenshteinDistance\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Designbycode\\LevenshteinDistance\\Tests\\": "tests"
        }
    },
    "scripts": {
        "test": "vendor/bin/pest",
            "test-coverage": "vendor/bin/pest --coverage",
        "format": "vendor/bin/pint"
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "phpstan/extension-installer": true
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
